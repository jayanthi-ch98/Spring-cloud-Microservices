docker ps---> to see which dockers are running



docker run -p 5673:5672   ---> to run on different port


docker logs rabbitmq  --> to see the logs

docker logs -f <container_name_or_id>

docker images




docker run -d --name zipkin -p 9411:9411 openzipkin/zipkin   ----> to run in detached mode -d



<---------------------->to stop and remove a conatiner<------------------------------------>

docker stop springboot-mysql-container
docker rm springboot-mysql-container

docker stop 43addd01b163  -- to stop the docker
docker rm 43addd01b163 --- to remove the docker image

<----------------> to pull and create mysql docker from your local<---------------------------->

docker pull mysql:latest  ---> to pull docker images

docker run -p 3307:3306 --name localhost -e MYSQL_ROOT_PASSWORD=Jayanthi@mysql -e MYSQL_DATABASE=employee_service -e MYSQL_USER=jayanthi -e MYSQL_PASSWORD=jayanthi -d mysql:latest

docker logs -f localhost --> to check docker container created is running or not

docker ps

docker exec -it localhost bash

mysql -u root -p

Enter password 

show databases

use employeedb;
show tables
select * from users;

<--------------------------------------------------------------->



<------------------>Docker File<------------------------->

FROM eclipse-temurin:17

LABEL maintainer="jayanthi.ch98@gmail.com"

WORKDIR /app

COPY SpringBoot-docker-demo-0.0.1-SNAPSHOT.jar /app/springboot-docker-demo.jar

ENTRYPOINT ["java","-jar","springboot-docker-demo.jar"]



<--------------------------------------------------------------->

<--------------------> To build docker image from project and run it<----------------------------->


docker build -t springboot-docker-demo .

docker build -t springboot-docker-demo:0.0.1.RELEASE . ---> to add tags

docker run -p 9090:9090 springboot-docker-demo


docker run -p 9091:9090 springboot-docker-demo:0.0.1.RELEASE ---> to run on different ports

<--------------------------------------------------------------->



<------------------------------->To create docker networks and run mysql and application in same newtwork<---------------------------------------------------------------->

docker network create springboot-mysql-net
docker network ls
docker run --name mysqldb --network springboot-mysql-net  -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=user_management -d mysql
docker ps

docker run --name springboot-app --network springboot-mysql-net -p 8080:8080 springboot-restful-webservices

docker inspect mysql---> to inspect the container

